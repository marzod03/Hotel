generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model administrador {
  id       Int    @id @default(autoincrement())
  nombre   String
  correo   String @unique(map: "Administrador_correo_key")
  password String
}

model habitacion {
  id             Int                 @id @default(autoincrement())
  nombre         String
  precio         Float
  descripcion    String?             @db.Text
  imagenUrl      String
  promociones    promocion[]
  reservas       ReservaHabitacion[]
  tipoHabitacion String? // Se mantiene como opcional para no eliminar datos
}

model promocion {
  id           Int        @id @default(autoincrement())
  precioPromo  Float      @db.Float
  inicio       DateTime   @db.DateTime(0)
  fin          DateTime   @db.DateTime(0)
  habitacionId Int
  habitacion   habitacion @relation(fields: [habitacionId], references: [id])

  @@index([habitacionId])
}

model reserva {
  id             Int                 @id @default(autoincrement())
  fechaEntrada   DateTime
  fechaSalida    DateTime
  status         String              @default("pendiente")
  tipoHabitacion String? // SE MANTIENE por compatibilidad temporal
  clienteId      Int? // SE MANTIENE como opcional temporalmente
  cliente        cliente?            @relation(fields: [clienteId], references: [id])
  habitaciones   ReservaHabitacion[]
  telefono       String?             @db.VarChar(20) // Mantenemos para evitar pérdida
  email          String?             @db.VarChar(255) // Mantenemos para evitar pérdida
  nombreCliente  String? // Mantenemos para evitar pérdida
}

model ReservaHabitacion {
  id           Int        @id @default(autoincrement())
  reservaId    Int
  habitacionId Int
  reserva      reserva    @relation(fields: [reservaId], references: [id])
  habitacion   habitacion @relation(fields: [habitacionId], references: [id])

  @@index([reservaId])
  @@index([habitacionId])
}

model imagenhotel {
  id  Int    @id @default(autoincrement())
  url String
}

model cliente {
  id       Int       @id @default(autoincrement())
  nombre   String
  apellido String
  telefono String?   @db.VarChar(20)
  email    String    @unique
  reservas reserva[]
}
